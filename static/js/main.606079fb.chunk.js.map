{"version":3,"sources":["firebase.js","hooks/use-auth.js","store/slices/userSlice.ts","components/User/User.tsx","const.ts","components/User-List/UserList.tsx","components/CreateMessage/CreateMessage.tsx","components/Message/Message.tsx","components/Chat/Chat.tsx","Pages/ChatPage.tsx","Pages/HomePage.tsx","components/Form/Form.tsx","components/Login/Login.tsx","Pages/LoginPage.tsx","components/SingUp/SingUp.tsx","Pages/RegistrationPage.tsx","Pages/UserPage.tsx","components/Header/Header.tsx","App.tsx","store/index.ts","index.tsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","useAuth","useSelector","state","user","email","id","isAuth","ChatID","firstName","secondName","nameFriend","HeaderChat","userSlice","createSlice","name","initialState","reducers","setUser","action","payload","SetChatID","setFriendName","setHeaderChat","removeUser","actions","User","AppRoute","props","userId","setNavChat","useState","IdChat","setIdChat","dispatch","useDispatch","NameFriend","createChat","myId","arrayID","sort","docRef","doc","getDoc","exists","chat","setDoc","merge","useEffect","className","style","display","alignItems","Avatar","height","width","marginRight","Button","variant","endIcon","color","onClick","q","query","collection","orderBy","users","onSnapshot","querySnapshot","newUsers","forEach","push","data","_","isEqual","UserList","navChat","usersList","setUsersList","sortKey","setSortKey","sortUsers","indexOf","replace","to","Grid","container","marginInline","marginTop","direction","rowGap","margin","textAlign","marginBottom","TextField","label","value","onChange","e","target","map","login","CreateMessage","setValue","sendMessage","messageText","trimStart","newMassage","Date","now","text","createAt","serverTimestamp","onKeypress","code","ctrlKey","document","addEventListener","removeEventListener","multiline","fullWidth","maxRows","InputProps","disableUnderline","Message","time","timeSend","toLocaleString","slice","maxWidth","minWidth","marginLeft","backgroundColor","border","borderRadius","padding","wordWrap","whiteSpace","fontSize","Chat","messagesList","divRef","useRef","newMessagesList","setNewMessagesList","check","setCheck","length","title","options","body","dir","test","navigator","userAgent","window","Notification","permission","requestPermission","alert","current","scrollIntoView","behavior","index","seconds","ref","ChatPage","newMessages","ChatId","setNewMessages","messages","useUpdate","userList","HomePage","userPage","Form","handleClick","useForm","mode","register","formState","errors","isValid","handleSubmit","justifyContent","onSubmit","flexDirection","required","paddingTop","message","pattern","minLength","type","password","Input","disabled","getUserInfo","docSnap","userInfo","Login","navigate","useNavigate","getAuth","onAuthStateChanged","then","uid","auth","signInWithEmailAndPassword","catch","console","log","LoginPage","registration","SingUp","createUserWithEmailAndPassword","newUser","addUser","error","errorCode","errorMessage","RegistrationPage","UserPage","memo","mobileOpen","setMobileOpen","nameHead","setNameHead","handleDrawerToggle","exit","signOut","drawer","Box","sx","Typography","my","textOverflow","Divider","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","undefined","AppBar","component","Toolbar","IconButton","edge","mr","sm","xs","gap","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","App","path","home","element","store","configureStore","reducer","userReducer","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.606079fb.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nconst app = initializeApp(\r\n  {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_API_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  }\r\n);\r\nexport const db = getFirestore(app)\r\n\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport function useAuth() {\r\n  const { email, id, ChatID, firstName, secondName, nameFriend, HeaderChat } = useSelector(state => state.user)\r\n\r\n  return {\r\n    isAuth: !!email,\r\n    email,\r\n    ChatID,\r\n    id,\r\n    firstName,\r\n    secondName,\r\n    nameFriend,\r\n    HeaderChat\r\n  }\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  firstName: null,\r\n  secondName: null,\r\n  email: null,\r\n  id: null,\r\n  ChatID: null,\r\n  nameFriend: null,\r\n  HeaderChat: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, action) {\r\n      state.email = action.payload.email;\r\n      state.id = action.payload.id;\r\n      state.firstName = action.payload.firstName;\r\n      state.secondName = action.payload.secondName;\r\n    },\r\n    SetChatID(state, action) {\r\n      state.ChatID = action.payload.ChatID;\r\n    },\r\n    setFriendName(state, action) {\r\n      state.nameFriend = action.payload.nameFriend\r\n    },\r\n    setHeaderChat(state, action) {\r\n      state.HeaderChat = action.payload.HeaderChat;\r\n    },\r\n    removeUser(state) {\r\n      state.email = null;\r\n      state.id = null;\r\n      state.ChatID = null;\r\n      state.firstName = null;\r\n      state.secondName = null;\r\n      state.nameFriend = null;\r\n      state.HeaderChat = null;\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setUser, removeUser, SetChatID, setFriendName, setHeaderChat } = userSlice.actions;\r\nexport default userSlice.reducer;","import { Avatar, Button } from \"@mui/material\"\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useAuth } from '../../hooks/use-auth';\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SetChatID, setFriendName } from \"../../store/slices/userSlice\";\r\n\r\n\r\ntype UserProps = {\r\n  userId: string,\r\n  firstName: string,\r\n  secondName: string,\r\n  setNavChat: Function\r\n}\r\n\r\n\r\n\r\nfunction User(props: UserProps): JSX.Element {\r\n  const { userId, secondName, firstName, setNavChat } = props;\r\n  const { id } = useAuth();\r\n  const [IdChat, setIdChat] = useState<string | null>(null);\r\n  const dispatch = useDispatch();\r\n  const [NameFriend] = useState(firstName)\r\n\r\n\r\n\r\n  const createChat = async function (myId: string, userId: string): Promise<any> {\r\n    const arrayID = [userId, myId];\r\n    arrayID.sort();\r\n    const id: string = `${arrayID[0]}${arrayID[1]}`;\r\n    const docRef = doc(db, \"Chats\", `${id}`);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      setIdChat(id)\r\n    } else {\r\n      const chat = doc(db, `${setIdChat}`, `${id}`);\r\n      await setDoc(chat, {\r\n        IdChat: `${id}`\r\n      }, { merge: true });\r\n      setIdChat(id)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNavChat(false)\r\n    if (IdChat) {\r\n      dispatch(SetChatID({\r\n        ChatID: IdChat,\r\n      }))\r\n      dispatch(setFriendName({\r\n        nameFriend: NameFriend\r\n      }))\r\n      setNavChat(true)\r\n    }\r\n  }, [IdChat])\r\n\r\n  return (\r\n\r\n    < div className=\"users-list__link\" >\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Avatar\r\n          style={{\r\n            height: 45,\r\n            width: 45,\r\n            marginRight: 10,\r\n          }}\r\n        />\r\n        <p>{secondName} {firstName}</p>\r\n      </div>\r\n      <Button\r\n        variant=\"text\" endIcon={<SendIcon />}\r\n        style={{ color: \"white\" }}\r\n        onClick={() => createChat(id, userId)}\r\n      >\r\n        Chat\r\n      </Button>\r\n    </div >\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default User\r\n","/* eslint-disable */\r\nexport enum AppRoute {\r\n  login = \"/login\",\r\n  registration = \"/registration\",\r\n  chat = \"/chat\",\r\n  home = \"/messenger-ts\",\r\n  userPage = '/user',\r\n  userList = \"/users\"\r\n}\r\n/* eslint-enable */\r\n","import { Grid, TextField } from \"@mui/material\"\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport User from \"../User/User\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from '../../hooks/use-auth'\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppRoute } from \"../../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setHeaderChat } from \"../../store/slices/userSlice\";\r\n\r\n\r\nconst q = query(collection(db, \"Users\"), orderBy(\"secondName\"));\r\nlet users: any = [];\r\n/* eslint-disable */\r\nconst unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n\r\n  /* eslint-enable */\r\n  const newUsers: any = [];\r\n  querySnapshot.forEach((doc) => {\r\n    newUsers.push(doc.data());\r\n  });\r\n  users = [];\r\n  users = [...newUsers]\r\n  if (!_.isEqual(users, newUsers)) {\r\n    users = [];\r\n    users = [...newUsers]\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction UserList() {\r\n  const [navChat, setNavChat] = useState(false);\r\n  const { isAuth, email } = useAuth();\r\n  const [usersList, setUsersList] = useState<any[]>([]);\r\n  const [sortKey, setSortKey] = useState<string>('');\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setHeaderChat({\r\n      HeaderChat: \"\"\r\n    }))\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (sortKey === \"\") {\r\n      setUsersList(users)\r\n    }\r\n    else {\r\n      let sortUsers: any[] = [];\r\n      users.forEach((user: any) => {\r\n        const fullName = user.firstName + \" \" + user.secondName;\r\n        if (fullName.indexOf(sortKey) > -1) {\r\n          sortUsers.push(user)\r\n        }\r\n        setUsersList(sortUsers)\r\n      })\r\n    }\r\n  }, [sortKey])\r\n  useEffect(() => {\r\n    setUsersList(users)\r\n  }, [users])\r\n  return (\r\n    <>\r\n      {isAuth ?\r\n        (\r\n          navChat ?\r\n            <Navigate replace to={AppRoute.chat} />\r\n            :\r\n            < Grid container\r\n              style={{ width: \"min(100% - 2rem)\", marginInline: \"auto\", height: \"100%\", marginTop: \"70px\" }}\r\n              direction={\"column\"}\r\n              rowGap={\"20px\"}\r\n            >\r\n              <h1\r\n                style={{ margin: \"0, auto\", textAlign: \"center\", marginBottom: \"25px\", marginTop: \"25px\" }}\r\n              >\r\n                All Users\r\n              </h1>\r\n              <TextField\r\n                label=\"UserName\"\r\n                variant=\"outlined\"\r\n                value={sortKey}\r\n                onChange={(e) => setSortKey(e.target.value)} />\r\n              <div\r\n                className=\"users-list\"\r\n              >\r\n                {\r\n                  usersList.map((user) => email !== user.email ? <User key={user.id} firstName={user.firstName} secondName={user.secondName} userId={user.id} setNavChat={setNavChat} /> : null)\r\n                }\r\n              </div>\r\n            </Grid>\r\n        )\r\n        :\r\n        <Navigate replace to={AppRoute.login} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default UserList\r\n","import { Button, Grid, TextField } from \"@mui/material\";\r\nimport { doc, serverTimestamp, setDoc } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\n\r\n\r\n\r\nfunction CreateMessage() {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const { email, ChatID } = useAuth();\r\n  const sendMessage = () => {\r\n    if (value !== '') {\r\n      let messageText = value.trimStart();\r\n      const newMassage = doc(db, `${ChatID}`, `${Date.now()}${email}`);\r\n      setDoc(newMassage, {\r\n        name: `${email}`,\r\n        text: messageText,\r\n        createAt: serverTimestamp(),\r\n      }, { merge: true });\r\n      setValue(\"\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    function onKeypress(e: any) {\r\n      if (value && e.code === \"Enter\") {\r\n        if (e.ctrlKey) {\r\n          setValue(value + \"\\r\\n\")\r\n        }\r\n        else {\r\n          sendMessage()\r\n        }\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keypress', onKeypress);\r\n\r\n    return () => {\r\n      document.removeEventListener('keypress', onKeypress);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Grid container\r\n      direction={\"column\"}\r\n      alignItems={\"flex-end\"}\r\n      style={{ width: \"100%\" }}\r\n      className=\"chat__input-area\"\r\n    >\r\n      <div className=\"chat__input\">\r\n        <div\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            variant={'standard'}\r\n            maxRows={'3'}\r\n            InputProps={{\r\n              disableUnderline: true\r\n            }}\r\n\r\n          />\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"chat__button\"\r\n          onClick={sendMessage}\r\n          style={{ height: \"100%\" }}\r\n        >\r\n          Отправить\r\n        </Button>\r\n      </div>\r\n\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\nexport default CreateMessage\r\n","import { Avatar, Grid } from \"@mui/material\"\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\n\r\ntype MessageProps = {\r\n  value: {\r\n    createAt: {\r\n      nanoseconds: number,\r\n      seconds: number\r\n    },\r\n    name: string,\r\n    text: string,\r\n  }\r\n  time: number | string\r\n}\r\n\r\nfunction Message({ value, time }: MessageProps) {\r\n  let timeSend: string = \"now\"\r\n  if (typeof time === \"number\") {\r\n    timeSend = new Date(time * 1000).toLocaleString().slice(12, 17)\r\n  }\r\n  const { name } = value\r\n  const { email, nameFriend, firstName } = useAuth();\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: \"85%\",\r\n        minWidth: \"20%\",\r\n        margin: 10,\r\n        marginLeft: email === name ? 'auto' : \"10px\",\r\n        backgroundColor: email === name ? '#7171ef' : \"#7d7d8e\",\r\n        width: 'fit-content',\r\n        border: \"1px solid grey\",\r\n        borderRadius: \"5px\",\r\n        color: \"white\",\r\n        padding: 5,\r\n        wordWrap: \"break-word\"\r\n      }}\r\n    >\r\n      {/* <Grid container\r\n        alignItems={'center'}\r\n        columnGap={'5px'}\r\n        style={{\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        <Avatar\r\n          style={{\r\n            height: 30,\r\n            width: 30\r\n          }}\r\n        />\r\n        <div>{email === name ?\r\n          `${firstName}` :\r\n          `${nameFriend}`}</div>\r\n      </Grid> */}\r\n      <div\r\n        style={{\r\n          marginBottom: \"10px\",\r\n          whiteSpace: \"pre-wrap\"\r\n        }}\r\n      >{value.text}</div>\r\n      <div\r\n        style={{\r\n          textAlign: \"end\",\r\n          fontSize: \"smaller\",\r\n          color: \"#00000091\"\r\n        }}\r\n      >{timeSend}</div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Message","\r\nimport { Container, Grid } from \"@mui/material\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\nimport CreateMessage from \"../CreateMessage/CreateMessage\";\r\nimport Message from \"../Message/Message\";\r\n/* eslint-disable */\r\nfunction sendNotification(title: string, options: any) {\r\n  if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\r\n    if (!(\"Notification\" in window)) {\r\n\r\n    }\r\n    else if (Notification.permission === \"granted\") {\r\n      var notification = new Notification(title, options);\r\n    }\r\n    else if (Notification.permission !== 'denied') {\r\n      Notification.requestPermission(function (permission) {\r\n\r\n        if (permission === \"granted\") {\r\n          var notification = new Notification(title, options);\r\n\r\n        } else {\r\n          alert('Вы запретили показывать уведомления');\r\n        }\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n}\r\n/* eslint-enable */\r\n\r\ntype ChatProps = {\r\n  messagesList: any[]\r\n}\r\n\r\nfunction Chat(props: ChatProps) {\r\n  const { messagesList } = props;\r\n  const { nameFriend, email } = useAuth();\r\n  const divRef = useRef<null | HTMLDivElement>(null)\r\n  const [newMessagesList, setNewMessagesList] = useState<any[]>([])\r\n  const [check, setCheck] = useState(false)\r\n  useEffect(() => {\r\n    if (!(_.isEqual(messagesList, newMessagesList)) && newMessagesList.length) {\r\n      const { text, name } = messagesList[messagesList.length - 1];\r\n      if (name !== email) {\r\n        sendNotification(`New Message from ${nameFriend} `, {\r\n          body: `${text}`,\r\n          dir: 'auto'\r\n        });\r\n      }\r\n      setCheck(!check)\r\n    }\r\n    setNewMessagesList(messagesList)\r\n  }, [messagesList])\r\n  useEffect(() => {\r\n    divRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [messagesList])\r\n  return (\r\n    < div\r\n      className=\"chat\">\r\n\r\n      <div\r\n      >\r\n        <Grid container\r\n          className=\"chat__wrapper\"\r\n        >\r\n          <div\r\n            className=\"chat__window\"\r\n          >\r\n            <div\r\n              className=\"chat__messages\"\r\n            >\r\n              {messagesList.map((value, index) => <Message key={index} value={value} time={!!value.createAt ?\r\n                value.createAt.seconds\r\n                :\r\n                \"Now\"\r\n              } />)}\r\n            </div>\r\n\r\n            <div ref={divRef} />\r\n          </div>\r\n          <CreateMessage />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppRoute } from \"../const\";\r\nimport Chat from \"../components/Chat/Chat\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setHeaderChat } from \"../store/slices/userSlice\";\r\n\r\n\r\n\r\nfunction useUpdate(ChatId: any) {\r\n  const [newMessages, setNewMessages] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    const q = query(collection(db, `${ChatId}`), orderBy(\"createAt\"));\r\n    /* eslint-disable */\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      /* eslint-enable */\r\n      const messages: any = [];\r\n      querySnapshot.forEach((doc) => {\r\n        messages.push(doc.data());\r\n      });\r\n      setNewMessages(messages);\r\n    })\r\n  }, []);\r\n  return newMessages;\r\n}\r\n\r\n\r\nfunction ChatPage(): JSX.Element {\r\n  const { ChatID, nameFriend } = useAuth();\r\n  const newMessages = useUpdate(ChatID);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(setHeaderChat({\r\n      HeaderChat: nameFriend\r\n    }))\r\n  }, [ChatID])\r\n  return (\r\n    <>\r\n      {\r\n        !ChatID ?\r\n          <Navigate replace to={AppRoute.userList} />\r\n          :\r\n          <Chat messagesList={newMessages} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChatPage\r\n","import { Navigate } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport { useAuth } from '../hooks/use-auth'\r\n\r\n\r\nfunction HomePage(): JSX.Element {\r\n  const { isAuth } = useAuth();\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isAuth ?\r\n          <Navigate replace to={AppRoute.userPage} />\r\n          :\r\n          <Navigate replace to={AppRoute.login} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","\r\nimport { Grid, Input, TextField } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ninterface FormProps {\r\n  title: string,\r\n  handleClick: any,\r\n  login: boolean,\r\n\r\n}\r\nfunction Form({ title, handleClick, login, }: FormProps): JSX.Element {\r\n  const {\r\n    register,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n  } = useForm({\r\n    mode: \"onChange\"\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container\r\n        alignItems={\"center\"}\r\n        justifyContent={\"center\"}\r\n        direction={\"column\"}\r\n        rowGap={\"10%\"}\r\n      >\r\n        <form onSubmit={handleSubmit(handleClick)}\r\n          style={{\r\n            width: \"216px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}>\r\n          {\r\n            login ? null\r\n              :\r\n              <>\r\n                <TextField\r\n                  {...register(\"firstName\", {\r\n                    required: \"Required\",\r\n                  })\r\n                  }\r\n                  label=\"First Name\"\r\n                  variant=\"standard\" />\r\n                <div\r\n                  style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n                >\r\n                  {errors?.firstName && <p>\r\n                    {errors?.firstName?.message || \"Error\"}\r\n                  </p>}\r\n                </div>\r\n                <TextField\r\n                  {...register(\"secondName\", {\r\n                    required: \"Required\",\r\n                  })\r\n                  }\r\n                  label=\"Second Name\"\r\n                  variant=\"standard\" />\r\n                <div\r\n                  style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n                >\r\n                  {errors?.secondName && <p>\r\n                    {errors?.secondName?.message || \"Error\"}\r\n                  </p>}\r\n                </div>\r\n              </>\r\n          }\r\n          <TextField\r\n            {...register(\"email\", {\r\n              required: \"Required\",\r\n              pattern: {\r\n                value: /\\S+@\\S+\\.\\S+/,\r\n                message: \"Entered value does not match email format\"\r\n              }\r\n            })\r\n            }\r\n            label=\"Email\"\r\n            variant=\"standard\" />\r\n          <div\r\n            style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n          >\r\n            {errors?.email && <p>\r\n              {errors?.email?.message || \"Error\"}\r\n            </p>}\r\n          </div>\r\n          <TextField\r\n            {...register(\"password\", {\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Minimum 6 symbols \"\r\n              }\r\n            })\r\n            }\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"standard\" />\r\n          <div\r\n            style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n          >\r\n            {errors?.password && <p>\r\n              {errors?.password?.message || \"Error\"}\r\n            </p>}\r\n          </div>\r\n\r\n          <Input\r\n            className=\"submit-form\"\r\n            type=\"submit\"\r\n            value={title}\r\n            disableUnderline={true}\r\n            disabled={!isValid}\r\n          />\r\n\r\n\r\n        </form>\r\n      </Grid>\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { useDispatch } from \"react-redux\"\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport Form from \"../Form/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setUser } from \"../../store/slices/userSlice\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\n\r\ntype RegisterProps = {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  password: string\r\n};\r\n\r\nasync function getUserInfo(data: any) {\r\n\r\n  const docRef = doc(db, \"Users\", `${data.email}`);\r\n  const docSnap = await getDoc(docRef);\r\n  let userInfo = await docSnap.data();\r\n  return userInfo\r\n\r\n}\r\n\r\nfunction Login(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n\r\n  getAuth().onAuthStateChanged(function (user) {\r\n    if (user) {\r\n      getUserInfo(user).then((userInfo: any) => {\r\n        const { firstName, secondName } = userInfo;\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n          firstName: firstName,\r\n          secondName: secondName,\r\n        }))\r\n        navigate(`${AppRoute.chat}`)\r\n      })\r\n    }\r\n  });\r\n\r\n  function handleLogin(data: RegisterProps) {\r\n    const { email, password } = data;\r\n    const auth = getAuth();\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        getUserInfo(user).then((userInfo: any) => {\r\n          const { firstName, secondName } = userInfo;\r\n          dispatch(setUser({\r\n            email: user.email,\r\n            id: user.uid,\r\n            firstName: firstName,\r\n            secondName: secondName,\r\n          }))\r\n          navigate(`${AppRoute.chat}`)\r\n        })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n  return (\r\n    <Form title={\"Sign in\"} handleClick={handleLogin} login={true} />\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login/Login\"\r\nimport { AppRoute } from \"../const\"\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"page\">\r\n      <Login />\r\n      <p className=\"page__link\">\r\n        No account?   <br />\r\n        <Link to={AppRoute.registration}>Create it!</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import { useDispatch } from \"react-redux\"\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport Form from \"../Form/Form\";\r\nimport { setUser } from \"../../store/slices/userSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\ntype RegisterProps = {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  password: string\r\n};\r\n\r\nfunction addUser(email: string | null, id: string | null, firstName: string, secondName: string) {\r\n  const newUser = doc(db, 'Users', `${email}`);\r\n  setDoc(newUser, {\r\n    firstName: firstName,\r\n    secondName: secondName,\r\n    id: id,\r\n    email: email,\r\n  }, { merge: true });\r\n}\r\n\r\nfunction SingUp(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  function handleRegister(data: RegisterProps) {\r\n    const { firstName, secondName, email, password } = data;\r\n    const auth = getAuth();\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n          firstName: firstName,\r\n          secondName: secondName,\r\n        }\r\n        ))\r\n        addUser(user.email, user.uid, firstName, secondName)\r\n        navigate(`${AppRoute.chat}`)\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        console.log(errorCode)\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage)\r\n      });\r\n  }\r\n  return (\r\n    <Form title={\"Registration\"} handleClick={handleRegister} login={false} />\r\n  )\r\n}\r\n\r\nexport default SingUp\r\n","import { Link } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport SingUp from \"../components/SingUp/SingUp\"\r\n\r\nfunction RegistrationPage(): JSX.Element {\r\n  return (\r\n    <div className=\"page\">\r\n      <SingUp />\r\n      <p className=\"page__link\">\r\n        Already have an account? <br />\r\n        <Link to={AppRoute.login}>Sign in</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegistrationPage\r\n\r\n","import { Grid } from \"@mui/material\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport { useAuth } from '../hooks/use-auth'\r\n\r\nfunction UserPage(): JSX.Element {\r\n  const { isAuth } = useAuth();\r\n\r\n  return (\r\n\r\n    <>\r\n      {\r\n        isAuth ? (\r\n          <>\r\n            <div className=\"user-page\">\r\n              <Grid container\r\n                style={{ marginTop: \"80px\", height: \"80vh\", width: \"min(100% - 2rem)\", marginInline: \"auto\" }}\r\n                alignItems={\"flex-start\"}\r\n                justifyContent={\"flex-start\"}\r\n              >\r\n\r\n              </Grid>\r\n            </div>\r\n          </>\r\n        )\r\n          :\r\n          (\r\n            <Navigate replace to={AppRoute.login} />\r\n          )\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPage\r\n","import AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport { Avatar } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeUser } from \"../../store/slices/userSlice\";\r\nimport { AppRoute } from '../../const';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/use-auth';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n\r\ninterface Props {\r\n  window?: () => Window;\r\n\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default memo(function Header(props: Props) {\r\n  const { firstName, secondName, ChatID, HeaderChat, nameFriend } = useAuth();\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [nameHead, setNameHead] = useState<string>(`${secondName} ${firstName}`);\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (HeaderChat !== \"\") {\r\n      setNameHead(`Chat with ${nameFriend}`)\r\n    } else {\r\n      setNameHead(`${secondName} ${firstName}`)\r\n    }\r\n  }, [HeaderChat])\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  function exit() {\r\n    getAuth().signOut().then(function () {\r\n      dispatch(removeUser());\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}\r\n      style={{ height: \"10vh\" }}\r\n    >\r\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\r\n        <p style={{ textOverflow: \"ellipsis\" }}>\r\n          {nameHead}\r\n        </p>\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        <Link to={AppRoute.userList}>\r\n          <ListItem disablePadding>\r\n            <ListItemButton sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary='Users' />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </Link>\r\n        <Link to={AppRoute.chat} >\r\n          <ListItem disablePadding\r\n            disabled={!ChatID}>\r\n            <ListItemButton sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary='Chat' />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </Link>\r\n        <Button\r\n          variant=\"text\"\r\n          style={{ color: \"black\" }}\r\n          onClick={exit}\r\n        >\r\n          Sing Out\r\n        </Button>\r\n      </List>\r\n    </Box >\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <AppBar component=\"nav\"\r\n        style={{ backgroundColor: \"rgb(101 119 163)\" }}\r\n      >\r\n        <Toolbar\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n            style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\r\n          >\r\n            <Avatar />\r\n            <p style={{ textOverflow: \"ellipsis\" }}>\r\n              {nameHead}\r\n            </p>\r\n          </Typography>\r\n          <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n            <Link to={AppRoute.userList} >\r\n              <Button sx={{ color: '#fff' }}>\r\n                Users\r\n              </Button>\r\n            </Link>\r\n            <Link to={AppRoute.chat} >\r\n              <Button sx={{ color: '#fff' }}\r\n                disabled={!ChatID}\r\n              >\r\n                Chat\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n          <Button\r\n            variant=\"text\"\r\n            style={{ color: \"white\" }}\r\n            onClick={exit}\r\n          >\r\n            Sing Out\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box component=\"nav\">\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </>\r\n  )\r\n})","import { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport UserList from \"./components/User-List/UserList\";\r\nimport { AppRoute } from \"./const\";\r\nimport ChatPage from \"./Pages/ChatPage\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport RegistrationPage from \"./Pages/RegistrationPage\";\r\nimport UserPage from \"./Pages/UserPage\";\r\nimport { useAuth } from \"../src/hooks/use-auth\"\r\nimport Header from \"./components/Header/Header\";\r\n\r\nfunction App(): JSX.Element {\r\n  const { isAuth } = useAuth();\r\n  return (\r\n    <>{\r\n      isAuth ?\r\n        <Header />\r\n        :\r\n        null\r\n    }\r\n      <Routes>\r\n        <Route path={AppRoute.home} element={<HomePage />} />\r\n        <Route path={AppRoute.login} element={<LoginPage />} />\r\n        <Route path={AppRoute.registration} element={<RegistrationPage />} />\r\n        <Route path={AppRoute.chat} element={<ChatPage />} />\r\n        <Route path={AppRoute.userPage} element={<UserPage />} />\r\n        <Route path={AppRoute.userList} element={<UserList />} />\r\n        <Route path=\"*\" element={<Navigate to={AppRoute.home} replace />} />\r\n      </Routes>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./slices/userSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport \"../src/styles/styles.scss\"\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './firebase';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n)\r\nroot.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}