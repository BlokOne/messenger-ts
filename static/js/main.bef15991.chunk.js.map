{"version":3,"sources":["firebase.js","hooks/use-auth.js","store/slices/userSlice.ts","components/User/User.tsx","const.ts","components/User-List/UserList.tsx","components/CreateMessage/CreateMessage.tsx","components/Message/Message.tsx","components/Chat/Chat.tsx","Pages/ChatPage.tsx","Pages/HomePage.tsx","components/Form/Form.tsx","components/Login/Login.tsx","Pages/LoginPage.tsx","components/SingUp/SingUp.tsx","Pages/RegistrationPage.tsx","Pages/UserPage.tsx","components/Header/Header.tsx","App.tsx","store/index.ts","index.tsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAnalytics","useAuth","useSelector","state","user","email","id","isAuth","ChatID","firstName","secondName","nameFriend","userSlice","createSlice","name","initialState","tokenPush","reducers","setUser","action","payload","SetChatID","setFriendName","setToken","removeUser","actions","User","AppRoute","props","userId","setNavChat","useState","IdChat","setIdChat","dispatch","useDispatch","NameFriend","createChat","myId","arrayID","sort","docRef","doc","getDoc","exists","chat","setDoc","merge","useEffect","className","style","display","alignItems","Avatar","height","width","marginRight","Button","variant","endIcon","color","onClick","q","query","collection","orderBy","users","onSnapshot","querySnapshot","newUsers","forEach","push","data","_","isEqual","UserList","navChat","usersList","setUsersList","sortKey","setSortKey","sortUsers","filter","indexOf","replace","to","Grid","container","marginInline","marginTop","direction","rowGap","margin","textAlign","marginBottom","TextField","label","value","onChange","e","target","map","login","CreateMessage","setValue","sendMessage","newMassage","Date","now","text","createAt","serverTimestamp","onKeypress","code","ctrlKey","document","addEventListener","removeEventListener","multiline","fullWidth","rows","Message","time","timeSend","toLocaleString","slice","maxWidth","minWidth","marginLeft","backgroundColor","border","borderRadius","padding","wordWrap","columnGap","whiteSpace","fontSize","Chat","messagesList","divRef","useRef","newMessagesList","setNewMessagesList","console","log","length","title","options","body","dir","window","Notification","permission","requestPermission","alert","current","scrollIntoView","behavior","Container","justifyContent","justifyItems","overflowY","overflowX","index","seconds","ref","ChatPage","newMessages","ChatId","setNewMessages","messages","useUpdate","userList","HomePage","userPage","Form","handleClick","useForm","mode","register","formState","errors","isValid","handleSubmit","reset","onSubmit","flexDirection","required","paddingTop","message","pattern","minLength","type","password","Input","disableUnderline","disabled","getUserInfo","docSnap","userInfo","Login","navigate","useNavigate","getAuth","onAuthStateChanged","then","uid","auth","signInWithEmailAndPassword","catch","LoginPage","registration","SingUp","createUserWithEmailAndPassword","newUser","addUser","error","errorCode","errorMessage","RegistrationPage","UserPage","memo","mobileOpen","setMobileOpen","handleDrawerToggle","exit","signOut","drawer","Box","sx","Typography","my","textOverflow","Divider","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","undefined","AppBar","component","Toolbar","IconButton","edge","mr","sm","xs","gap","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","App","path","home","element","store","configureStore","reducer","userReducer","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bef15991.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nconst app = initializeApp(\r\n  {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_API_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n  }\r\n);\r\nexport const db = getFirestore(app)\r\n\r\nconst analytics = getAnalytics(app);\r\n\r\n","import { useSelector } from \"react-redux\";\r\n\r\nexport function useAuth() {\r\n  const { email, id, ChatID, firstName, secondName, nameFriend } = useSelector(state => state.user)\r\n\r\n  return {\r\n    isAuth: !!email,\r\n    email,\r\n    ChatID,\r\n    id,\r\n    firstName,\r\n    secondName,\r\n    nameFriend\r\n  }\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  firstName: null,\r\n  secondName: null,\r\n  email: null,\r\n  id: null,\r\n  ChatID: null,\r\n  nameFriend: null,\r\n  tokenPush: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, action) {\r\n      state.email = action.payload.email;\r\n      state.id = action.payload.id;\r\n      state.firstName = action.payload.firstName;\r\n      state.secondName = action.payload.secondName;\r\n    },\r\n    SetChatID(state, action) {\r\n      state.ChatID = action.payload.ChatID;\r\n    },\r\n    setFriendName(state, action) {\r\n      state.nameFriend = action.payload.nameFriend\r\n    },\r\n    setToken(state, action) {\r\n      state.tokenPush = action.payload.tokenPush;\r\n    },\r\n    removeUser(state) {\r\n      state.email = null;\r\n      state.id = null;\r\n      state.ChatID = null;\r\n      state.firstName = null;\r\n      state.secondName = null;\r\n      state.nameFriend = null;\r\n      state.tokenPush = null;\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setUser, removeUser, SetChatID, setFriendName } = userSlice.actions;\r\nexport default userSlice.reducer;","import { Avatar, Button } from \"@mui/material\"\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useAuth } from '../../hooks/use-auth';\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { SetChatID, setFriendName } from \"../../store/slices/userSlice\";\r\n\r\n\r\ntype UserProps = {\r\n  userId: string,\r\n  firstName: string,\r\n  secondName: string,\r\n  setNavChat: Function\r\n}\r\n\r\n\r\n\r\nfunction User(props: UserProps): JSX.Element {\r\n  const { userId, secondName, firstName, setNavChat } = props;\r\n  const { id } = useAuth();\r\n  const [IdChat, setIdChat] = useState<string | null>(null);\r\n  const dispatch = useDispatch();\r\n  const [NameFriend, setNameFriend] = useState(firstName)\r\n\r\n\r\n\r\n  const createChat = async function (myId: string, userId: string): Promise<any> {\r\n    const arrayID = [userId, myId];\r\n    arrayID.sort();\r\n    const id: string = `${arrayID[0]}${arrayID[1]}`;\r\n    const docRef = doc(db, \"Chats\", `${id}`);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      setIdChat(id)\r\n    } else {\r\n      const chat = doc(db, `${setIdChat}`, `${id}`);\r\n      await setDoc(chat, {\r\n        IdChat: `${id}`\r\n      }, { merge: true });\r\n      setIdChat(id)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNavChat(false)\r\n    if (IdChat) {\r\n      dispatch(SetChatID({\r\n        ChatID: IdChat,\r\n      }))\r\n      dispatch(setFriendName({\r\n        nameFriend: NameFriend\r\n      }))\r\n      setNavChat(true)\r\n    }\r\n  }, [IdChat])\r\n\r\n  return (\r\n\r\n    < div className=\"users-list__link\" >\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Avatar\r\n          style={{\r\n            height: 45,\r\n            width: 45,\r\n            marginRight: 10,\r\n          }}\r\n        />\r\n        <p>{secondName} {firstName}</p>\r\n      </div>\r\n      <Button\r\n        variant=\"text\" endIcon={<SendIcon />}\r\n        style={{ color: \"white\" }}\r\n        onClick={() => createChat(id, userId)}\r\n      >\r\n        Chat\r\n      </Button>\r\n    </div >\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default User\r\n","/* eslint-disable */\r\nexport enum AppRoute {\r\n  login = \"/login\",\r\n  registration = \"/registration\",\r\n  chat = \"/chat\",\r\n  home = \"/messenger-ts\",\r\n  userPage = '/user',\r\n  userList = \"/users\"\r\n}\r\n/* eslint-enable */\r\n","import { Grid, TextField } from \"@mui/material\"\r\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport User from \"../User/User\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from '../../hooks/use-auth'\r\nimport { isatty } from \"tty\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\n\r\nconst q = query(collection(db, \"Users\"), orderBy(\"secondName\"));\r\nlet users: any = [];\r\nconst unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n  const newUsers: any = [];\r\n  querySnapshot.forEach((doc) => {\r\n    newUsers.push(doc.data());\r\n  });\r\n  users = [];\r\n  users = [...newUsers]\r\n  if (!_.isEqual(users, newUsers)) {\r\n    users = [];\r\n    users = [...newUsers]\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nfunction UserList() {\r\n  const [navChat, setNavChat] = useState(false);\r\n  const { isAuth, email } = useAuth();\r\n  const [usersList, setUsersList] = useState<any[]>([]);\r\n  const [sortKey, setSortKey] = useState<string>('');\r\n\r\n\r\n  useEffect(() => {\r\n    if (sortKey === \"\") {\r\n      setUsersList(users)\r\n    }\r\n    else {\r\n      let sortUsers: any[] = [];\r\n      users.filter((user: any) => {\r\n        const fullName = user.firstName + \" \" + user.secondName;\r\n        if (fullName.indexOf(sortKey) > -1) {\r\n          sortUsers.push(user)\r\n        }\r\n        setUsersList(sortUsers)\r\n      })\r\n    }\r\n  }, [sortKey])\r\n  useEffect(() => {\r\n    setUsersList(users)\r\n  }, [users])\r\n  return (\r\n    <>\r\n      {isAuth ?\r\n        (\r\n          navChat ?\r\n            <Navigate replace to={AppRoute.chat} />\r\n            :\r\n            < Grid container\r\n              style={{ width: \"min(100% - 2rem)\", marginInline: \"auto\", height: \"100%\", marginTop: \"70px\" }}\r\n              direction={\"column\"}\r\n              rowGap={\"20px\"}\r\n            >\r\n              <h1\r\n                style={{ margin: \"0, auto\", textAlign: \"center\", marginBottom: \"25px\", marginTop: \"25px\" }}\r\n              >\r\n                All Users\r\n              </h1>\r\n              <TextField\r\n                label=\"UserName\"\r\n                variant=\"outlined\"\r\n                value={sortKey}\r\n                onChange={(e) => setSortKey(e.target.value)} />\r\n              <div\r\n                className=\"users-list\"\r\n              >\r\n                {\r\n                  usersList.map((user) => {\r\n                    if (email !== user.email) {\r\n                      return <User key={user.id} firstName={user.firstName} secondName={user.secondName} userId={user.id} setNavChat={setNavChat} />\r\n                    }\r\n                  })\r\n                }\r\n              </div>\r\n            </Grid>\r\n        )\r\n        :\r\n        <Navigate replace to={AppRoute.login} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","import { Button, Grid, TextField } from \"@mui/material\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { doc, serverTimestamp, setDoc } from \"firebase/firestore\";\r\nimport { getMessaging } from '../../../node_modules/firebase-admin/lib/messaging/index';\r\nimport { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\n\r\n\r\n\r\nfunction CreateMessage() {\r\n  const [value, setValue] = useState<string>(\"\");\r\n  const { email, ChatID } = useAuth();\r\n  const sendMessage = () => {\r\n\r\n    let userText = value.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n    if (userText !== '') {\r\n      const newMassage = doc(db, `${ChatID}`, `${Date.now()}${email}`);\r\n      setDoc(newMassage, {\r\n        name: `${email}`,\r\n        text: value,\r\n        createAt: serverTimestamp(),\r\n      }, { merge: true });\r\n      setValue(\"\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    function onKeypress(e: any) {\r\n      if (value && e.code === \"Enter\") {\r\n        if (e.ctrlKey) {\r\n          setValue(value + \"\\r\\n\")\r\n        }\r\n        else {\r\n          sendMessage()\r\n        }\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keypress', onKeypress);\r\n\r\n    return () => {\r\n      document.removeEventListener('keypress', onKeypress);\r\n    };\r\n  });\r\n  return (\r\n    <Grid container\r\n      direction={\"column\"}\r\n      alignItems={\"flex-end\"}\r\n      style={{ width: \"100%\" }}\r\n    >\r\n      <TextField\r\n        multiline\r\n        fullWidth\r\n        rows={2}\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        variant={'outlined'} />\r\n      <Button onClick={sendMessage}>\r\n        Отправить\r\n      </Button>\r\n\r\n    </Grid>\r\n\r\n  )\r\n}\r\n\r\nexport default CreateMessage\r\n","import { Avatar, Grid } from \"@mui/material\"\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\n\r\ntype MessageProps = {\r\n  value: {\r\n    createAt: {\r\n      nanoseconds: number,\r\n      seconds: number\r\n    },\r\n    name: string,\r\n    text: string,\r\n  }\r\n  time: number | string\r\n}\r\n\r\nfunction Message({ value, time }: MessageProps) {\r\n  let timeSend: string = \"\"\r\n  if (typeof time === \"number\") {\r\n    timeSend = new Date(time * 1000).toLocaleString().slice(12, 17)\r\n  }\r\n  const { name } = value\r\n  const { email, nameFriend, firstName } = useAuth();\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: \"40%\",\r\n        minWidth: \"20%\",\r\n        margin: 10,\r\n        marginLeft: email === name ? 'auto' : \"10px\",\r\n        backgroundColor: email === name ? '#7171ef' : \"#7d7d8e\",\r\n        width: 'fit-content',\r\n        border: \"1px solid grey\",\r\n        borderRadius: \"5px\",\r\n        color: \"white\",\r\n        padding: 5,\r\n        wordWrap: \"break-word\"\r\n      }}\r\n    >\r\n      <Grid container\r\n        alignItems={'center'}\r\n        columnGap={'5px'}\r\n        style={{\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        <Avatar\r\n          style={{\r\n            height: 30,\r\n            width: 30\r\n          }}\r\n        />\r\n        <div>{email === name ?\r\n          `${firstName}` :\r\n          `${nameFriend}`}</div>\r\n      </Grid>\r\n      <div\r\n        style={{\r\n          marginBottom: \"10px\",\r\n          whiteSpace: \"pre-wrap\"\r\n        }}\r\n      >{value.text}</div>\r\n      <div\r\n        style={{\r\n          textAlign: \"end\",\r\n          fontSize: \"smaller\",\r\n          color: \"#00000091\"\r\n        }}\r\n      >{timeSend}</div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Message","\r\nimport { Button, Container, Grid, TextField } from \"@mui/material\";\r\nimport _ from \"lodash\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useAuth } from \"../../hooks/use-auth\";\r\nimport CreateMessage from \"../CreateMessage/CreateMessage\";\r\nimport Message from \"../Message/Message\";\r\n\r\nfunction sendNotification(title: string, options: any) {\r\n  if (!(\"Notification\" in window)) {\r\n    alert('Ваш браузер не поддерживает HTML Notifications, его необходимо обновить.');\r\n  }\r\n  else if (Notification.permission === \"granted\") {\r\n    var notification = new Notification(title, options);\r\n  }\r\n  else if (Notification.permission !== 'denied') {\r\n    Notification.requestPermission(function (permission) {\r\n\r\n      if (permission === \"granted\") {\r\n        var notification = new Notification(title, options);\r\n\r\n      } else {\r\n        alert('Вы запретили показывать уведомления');\r\n      }\r\n    });\r\n  } else {\r\n\r\n  }\r\n}\r\n\r\n\r\ntype ChatProps = {\r\n  messagesList: any[]\r\n}\r\n\r\nfunction Chat(props: ChatProps) {\r\n  const { messagesList } = props;\r\n  const { nameFriend, email } = useAuth();\r\n  const divRef = useRef<null | HTMLDivElement>(null)\r\n  const [newMessagesList, setNewMessagesList] = useState<any[]>([])\r\n  const [check, setCheck] = useState(false)\r\n  useEffect(() => {\r\n    if (_.isEqual(messagesList, newMessagesList)) {\r\n      console.log('1')\r\n    } else if (newMessagesList.length) {\r\n      console.log(newMessagesList)\r\n      const { text, name } = messagesList[messagesList.length - 1];\r\n      if (name !== email) {\r\n        console.log(1)\r\n        sendNotification(`New Message from ${nameFriend} `, {\r\n          body: `${text}`,\r\n          dir: 'auto'\r\n        });\r\n      }\r\n\r\n    }\r\n    setNewMessagesList(messagesList)\r\n  }, [messagesList])\r\n  useEffect(() => {\r\n    divRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [messagesList])\r\n  return (\r\n    < Container>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid container\r\n          style={{ marginTop: \"80px\" }}\r\n          justifyItems={\"center\"}\r\n          justifyContent={\"space-between\"}\r\n          rowGap={\"15px\"}\r\n        >\r\n          <h2>\r\n            Chat with {nameFriend}\r\n          </h2>\r\n          <div\r\n            style={\r\n              {\r\n                width: \"95%\",\r\n                height: \"50vh\",\r\n                border: '1px solid gray',\r\n                overflowY: 'auto',\r\n                overflowX: \"hidden\",\r\n                padding: \"10px\",\r\n                borderRadius: \"5px\"\r\n              }\r\n            }\r\n          >\r\n            {messagesList.map((value, index) => <Message key={index} value={value} time={!!value.createAt ?\r\n              value.createAt.seconds\r\n              :\r\n              \"Now\"\r\n            } />)}\r\n            <div ref={divRef} />\r\n          </div>\r\n          <CreateMessage />\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../hooks/use-auth\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AppRoute } from \"../const\";\r\nimport Chat from \"../components/Chat/Chat\";\r\nimport _ from \"lodash\";\r\n\r\n\r\n\r\nfunction useUpdate(ChatId: any) {\r\n  const [newMessages, setNewMessages] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    const q = query(collection(db, `${ChatId}`), orderBy(\"createAt\"));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const messages: any = [];\r\n      querySnapshot.forEach((doc) => {\r\n        messages.push(doc.data());\r\n      });\r\n      setNewMessages(messages);\r\n    })\r\n  }, []);\r\n  return newMessages;\r\n}\r\n\r\n\r\nfunction ChatPage(): JSX.Element {\r\n  const { ChatID } = useAuth();\r\n  const newMessages = useUpdate(ChatID);\r\n  return (\r\n    <>\r\n      {\r\n        !ChatID ?\r\n          <Navigate replace to={AppRoute.userList} />\r\n          :\r\n          <Chat messagesList={newMessages} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChatPage\r\n","import { Navigate } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport { useAuth } from '../hooks/use-auth'\r\n\r\n\r\nfunction HomePage(): JSX.Element {\r\n  const { isAuth } = useAuth();\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isAuth ?\r\n          <Navigate replace to={AppRoute.userPage} />\r\n          :\r\n          <Navigate replace to={AppRoute.login} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","\r\nimport { Grid, Input, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\";\r\n\r\ninterface FormProps {\r\n  title: string,\r\n  handleClick: any,\r\n  login: boolean,\r\n\r\n}\r\ntype FormInputs = {\r\n  email: string,\r\n  password: string,\r\n  firstName: string,\r\n  lastName: string,\r\n};\r\nfunction Form({ title, handleClick, login, }: FormProps): JSX.Element {\r\n  const {\r\n    register,\r\n    formState: { errors, isValid },\r\n    handleSubmit,\r\n    reset\r\n  } = useForm({\r\n    mode: \"onChange\"\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container\r\n        alignItems={\"center\"}\r\n        justifyContent={\"center\"}\r\n        direction={\"column\"}\r\n        rowGap={\"10%\"}\r\n      >\r\n        <form onSubmit={handleSubmit(handleClick)}\r\n          style={{\r\n            width: \"216px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}>\r\n          {\r\n            login ? null\r\n              :\r\n              <>\r\n                <TextField\r\n                  {...register(\"firstName\", {\r\n                    required: \"Required\",\r\n                  })\r\n                  }\r\n                  label=\"First Name\"\r\n                  variant=\"standard\" />\r\n                <div\r\n                  style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n                >\r\n                  {errors?.firstName && <p>\r\n                    {errors?.firstName?.message || \"Error\"}\r\n                  </p>}\r\n                </div>\r\n                <TextField\r\n                  {...register(\"secondName\", {\r\n                    required: \"Required\",\r\n                  })\r\n                  }\r\n                  label=\"Second Name\"\r\n                  variant=\"standard\" />\r\n                <div\r\n                  style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n                >\r\n                  {errors?.secondName && <p>\r\n                    {errors?.secondName?.message || \"Error\"}\r\n                  </p>}\r\n                </div>\r\n              </>\r\n          }\r\n          <TextField\r\n            {...register(\"email\", {\r\n              required: \"Required\",\r\n              pattern: {\r\n                value: /\\S+@\\S+\\.\\S+/,\r\n                message: \"Entered value does not match email format\"\r\n              }\r\n            })\r\n            }\r\n            label=\"Email\"\r\n            variant=\"standard\" />\r\n          <div\r\n            style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n          >\r\n            {errors?.email && <p>\r\n              {errors?.email?.message || \"Error\"}\r\n            </p>}\r\n          </div>\r\n          <TextField\r\n            {...register(\"password\", {\r\n              required: \"Required\",\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Minimum 6 symbols \"\r\n              }\r\n            })\r\n            }\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"standard\" />\r\n          <div\r\n            style={{ height: \"30px\", paddingTop: \"5px\", color: \"red\" }}\r\n          >\r\n            {errors?.password && <p>\r\n              {errors?.password?.message || \"Error\"}\r\n            </p>}\r\n          </div>\r\n\r\n          <Input\r\n            className=\"submit-form\"\r\n            type=\"submit\"\r\n            value={title}\r\n            disableUnderline={true}\r\n            disabled={!isValid}\r\n          />\r\n\r\n\r\n        </form>\r\n      </Grid>\r\n    </div >\r\n\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { useDispatch } from \"react-redux\"\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport Form from \"../Form/Form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setUser } from \"../../store/slices/userSlice\";\r\nimport { useState } from \"react\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\n\r\ntype RegisterProps = {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  password: string\r\n};\r\n\r\nasync function getUserInfo(data: any) {\r\n\r\n  const docRef = doc(db, \"Users\", `${data.email}`);\r\n  const docSnap = await getDoc(docRef);\r\n  let userInfo = await docSnap.data();\r\n  return userInfo\r\n\r\n}\r\n\r\nfunction Login(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n\r\n  getAuth().onAuthStateChanged(function (user) {\r\n    if (user) {\r\n      getUserInfo(user).then((userInfo: any) => {\r\n        const { firstName, secondName } = userInfo;\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n          firstName: firstName,\r\n          secondName: secondName,\r\n        }))\r\n        navigate(`${AppRoute.chat}`)\r\n      })\r\n    }\r\n  });\r\n\r\n  function handleLogin(data: RegisterProps) {\r\n    const { email, password } = data;\r\n    const auth = getAuth();\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        getUserInfo(user).then((userInfo: any) => {\r\n          const { firstName, secondName, email, password } = userInfo;\r\n          dispatch(setUser({\r\n            email: user.email,\r\n            id: user.uid,\r\n            firstName: firstName,\r\n            secondName: secondName,\r\n          }))\r\n          navigate(`${AppRoute.chat}`)\r\n        })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n  return (\r\n    <Form title={\"Sign in\"} handleClick={handleLogin} login={true} />\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Link } from \"react-router-dom\"\r\nimport Login from \"../components/Login/Login\"\r\nimport { AppRoute } from \"../const\"\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"page\">\r\n      <Login />\r\n      <p className=\"page__link\">\r\n        No account?   <br />\r\n        <Link to={AppRoute.registration}>Create it!</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import { useDispatch } from \"react-redux\"\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport Form from \"../Form/Form\";\r\nimport { setUser } from \"../../store/slices/userSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport { useState } from \"react\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\ntype RegisterProps = {\r\n  firstName: string;\r\n  secondName: string;\r\n  email: string;\r\n  password: string\r\n};\r\n\r\nfunction addUser(email: string | null, id: string | null, firstName: string, secondName: string) {\r\n  const newUser = doc(db, 'Users', `${email}`);\r\n  setDoc(newUser, {\r\n    firstName: firstName,\r\n    secondName: secondName,\r\n    id: id,\r\n    email: email,\r\n  }, { merge: true });\r\n}\r\n\r\nfunction SingUp(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  function handleRegister(data: RegisterProps) {\r\n    const { firstName, secondName, email, password } = data;\r\n    const auth = getAuth();\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(({ user }) => {\r\n        dispatch(setUser({\r\n          email: user.email,\r\n          id: user.uid,\r\n          firstName: firstName,\r\n          secondName: secondName,\r\n        }\r\n        ))\r\n        addUser(user.email, user.uid, firstName, secondName)\r\n        navigate(`${AppRoute.chat}`)\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        console.log(errorCode)\r\n        const errorMessage = error.message;\r\n        console.log(errorMessage)\r\n      });\r\n  }\r\n  return (\r\n    <Form title={\"Registration\"} handleClick={handleRegister} login={false} />\r\n  )\r\n}\r\n\r\nexport default SingUp\r\n","import { Link } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport SingUp from \"../components/SingUp/SingUp\"\r\n\r\nfunction RegistrationPage(): JSX.Element {\r\n  return (\r\n    <div className=\"page\">\r\n      <SingUp />\r\n      <p className=\"page__link\">\r\n        Already have an account? <br />\r\n        <Link to={AppRoute.login}>Sign in</Link>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegistrationPage\r\n\r\n","import { Grid } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { AppRoute } from \"../const\"\r\nimport { useAuth } from '../hooks/use-auth'\r\n\r\nfunction UserPage(): JSX.Element {\r\n  const { isAuth } = useAuth();\r\n\r\n  return (\r\n\r\n    <>\r\n      {\r\n        isAuth ? (\r\n          <>\r\n            <div className=\"user-page\">\r\n              <Grid container\r\n                style={{ marginTop: \"80px\", height: \"80vh\", width: \"min(100% - 2rem)\", marginInline: \"auto\" }}\r\n                alignItems={\"flex-start\"}\r\n                justifyContent={\"flex-start\"}\r\n              >\r\n\r\n              </Grid>\r\n            </div>\r\n          </>\r\n        )\r\n          :\r\n          (\r\n            <Navigate replace to={AppRoute.login} />\r\n          )\r\n      }\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default UserPage\r\n","import AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { memo, useState } from 'react';\r\nimport { Avatar } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeUser } from \"../../store/slices/userSlice\";\r\nimport { AppRoute } from '../../const';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/use-auth';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n\r\ninterface Props {\r\n  window?: () => Window;\r\n\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport default memo(function Header(props: Props) {\r\n  const { firstName, secondName, ChatID } = useAuth();\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  function exit() {\r\n    getAuth().signOut().then(function () {\r\n      dispatch(removeUser());\r\n    }, function (error) {\r\n      console.error('Sign Out Error', error);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\r\n        <p style={{ textOverflow: \"ellipsis\" }}>\r\n          {secondName} {firstName}\r\n        </p>\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        <Link to={AppRoute.userList}>\r\n          <ListItem disablePadding>\r\n            <ListItemButton sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary='Users' />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </Link>\r\n        <Link to={AppRoute.chat} >\r\n          <ListItem disablePadding\r\n            disabled={!ChatID}>\r\n            <ListItemButton sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary='Chat' />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        </Link>\r\n        <Button\r\n          variant=\"text\"\r\n          style={{ color: \"black\" }}\r\n          onClick={exit}\r\n        >\r\n          Sing Out\r\n        </Button>\r\n      </List>\r\n    </Box >\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <>\r\n      <AppBar component=\"nav\"\r\n        style={{ backgroundColor: \"#3318df99\" }}\r\n      >\r\n        <Toolbar\r\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: 'none' } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{ display: { xs: 'none', sm: 'block' } }}\r\n            style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}\r\n          >\r\n            <Avatar />\r\n            <p style={{ textOverflow: \"ellipsis\" }}>\r\n              {secondName} {firstName}\r\n            </p>\r\n          </Typography>\r\n          <Box sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n            <Link to={AppRoute.userList} >\r\n              <Button sx={{ color: '#fff' }}>\r\n                Users\r\n              </Button>\r\n            </Link>\r\n            <Link to={AppRoute.chat} >\r\n              <Button sx={{ color: '#fff' }}\r\n                disabled={!ChatID}\r\n              >\r\n                Chat\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n          <Button\r\n            variant=\"text\"\r\n            style={{ color: \"white\" }}\r\n            onClick={exit}\r\n          >\r\n            Sing Out\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box component=\"nav\">\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n    </>\r\n  )\r\n})","import { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport UserList from \"./components/User-List/UserList\";\r\nimport { AppRoute } from \"./const\";\r\nimport ChatPage from \"./Pages/ChatPage\";\r\nimport HomePage from \"./Pages/HomePage\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport RegistrationPage from \"./Pages/RegistrationPage\";\r\nimport UserPage from \"./Pages/UserPage\";\r\nimport { useAuth } from \"../src/hooks/use-auth\"\r\nimport Header from \"./components/Header/Header\";\r\nimport { browserLocalPersistence, getAuth, setPersistence, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { setUser } from \"./store/slices/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App(): JSX.Element {\r\n  const { isAuth, email } = useAuth();\r\n  return (\r\n    <>{\r\n      isAuth ?\r\n        <Header />\r\n        :\r\n        null\r\n    }\r\n      <Routes>\r\n        <Route path={AppRoute.home} element={<HomePage />} />\r\n        <Route path={AppRoute.login} element={<LoginPage />} />\r\n        <Route path={AppRoute.registration} element={<RegistrationPage />} />\r\n        <Route path={AppRoute.chat} element={<ChatPage />} />\r\n        <Route path={AppRoute.userPage} element={<UserPage />} />\r\n        <Route path={AppRoute.userList} element={<UserList />} />\r\n        <Route path=\"*\" element={<Navigate to={AppRoute.home} replace />} />\r\n      </Routes>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./slices/userSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport \"../src/styles/styles.scss\"\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './firebase';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n)\r\nroot.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}